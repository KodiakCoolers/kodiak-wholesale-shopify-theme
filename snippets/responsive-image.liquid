{% comment %}
  Responsive image with modern format support (AVIF/WebP)
  
  @param image {Object} - The image object
  @param alt {String} - Alt text for the image
  @param loading {String} - Loading attribute (lazy, eager)
  @param fetchpriority {String} - Fetchpriority attribute (high, low, auto)
  @param class {String} - CSS classes
  @param sizes {String} - Sizes attribute
  @param widths {String} - Comma-separated widths (default: "320,480,640,800,960,1280,1600")
{% endcomment %}

{%- liquid
  assign widths = widths | default: "320,480,640,800,960,1280,1600"
  assign width_array = widths | split: ","
  assign loading = loading | default: "lazy"
  assign fetchpriority = fetchpriority | default: "auto"
  assign sizes = sizes | default: "(max-width: 800px) 100vw, 800px"
  assign class = class | default: ""
  assign alt = alt | default: image.alt | escape
-%}

{% if image %}
  <picture>
    {%- comment -%} AVIF sources {%- endcomment -%}
    <source type="image/avif" srcset="
      {%- for width in width_array -%}
        {{ image | image_url: width: width | replace: '.jpg', '.avif' | replace: '.jpeg', '.avif' | replace: '.png', '.avif' }} {{ width }}w
        {%- unless forloop.last -%}, {% endunless -%}
      {%- endfor -%}
    " sizes="{{ sizes }}">
    
    {%- comment -%} WebP sources {%- endcomment -%}
    <source type="image/webp" srcset="
      {%- for width in width_array -%}
        {{ image | image_url: width: width | replace: '.jpg', '.webp' | replace: '.jpeg', '.webp' | replace: '.png', '.webp' }} {{ width }}w
        {%- unless forloop.last -%}, {% endunless -%}
      {%- endfor -%}
    " sizes="{{ sizes }}">
    
    {%- comment -%} Fallback image {%- endcomment -%}
    <img
      src="{{ image | image_url: width: 800 }}"
      srcset="
        {%- for width in width_array -%}
          {{ image | image_url: width: width }} {{ width }}w
          {%- unless forloop.last -%}, {% endunless -%}
        {%- endfor -%}
      "
      sizes="{{ sizes }}"
      width="{{ image.width }}"
      height="{{ image.height }}"
      loading="{{ loading }}"
      decoding="async"
      {% if fetchpriority != "auto" %}fetchpriority="{{ fetchpriority }}"{% endif %}
      alt="{{ alt }}"
      class="{{ class }}"
    >
  </picture>
{% endif %}
